# Server Configuration
# Environment mode: development, production, or test
NODE_ENV=development

# Port number for the server to listen on (1-65535)
PORT=4000

# Host address to bind the server to
# Use 0.0.0.0 to listen on all network interfaces
# Use 127.0.0.1 or localhost for local-only access
HOST=0.0.0.0

# CORS Configuration
# Allowed origins for CORS requests
# Use '*' to allow all origins (not recommended for production)
# Or specify a comma-separated list of allowed origins
CORS_ORIGIN=*

# Enable credentials (cookies, authorization headers) in CORS requests
# Set to 'true' or 'false'
CORS_CREDENTIALS=false

# Logging Configuration
# Log level: fatal, error, warn, info, debug, trace
LOG_LEVEL=info

# OpenAI Configuration
# REQUIRED: Your OpenAI API key (get one from https://platform.openai.com/api-keys)
OPENAI_API_KEY=sk-your-api-key-here

# Model to use for chat responses
OPENAI_MODEL=gpt-5

# Optional: Maximum number of tokens to generate in the response
# OPENAI_MAX_OUTPUT_TOKENS=1000

# Agentic Behavior Configuration
# Maximum number of tool execution rounds before requiring user input (1-100)
# Higher values allow the assistant to perform more autonomous actions
# Default: 10
MAX_TOOL_ROUNDS=10

# Database Configuration
# Path to SQLite database file
# Use ':memory:' for in-memory database (data will not persist)
DATABASE_PATH=./data/sessions.db

# Shell Sandbox Configuration
# Enable the experimental shell tool sandbox (true/false)
SHELL_SANDBOX_ENABLED=false

# Comma-separated allow list of shell commands the assistant can invoke
SHELL_SANDBOX_ALLOWED_COMMANDS=cat,ls,rg,head,tail

# Root directory the shell tool is allowed to access
SHELL_SANDBOX_WORKING_DIR=./

# Maximum size in bytes for captured command output
SHELL_SANDBOX_MAX_OUTPUT_BYTES=16384

# Maximum execution time in milliseconds for shell commands
SHELL_SANDBOX_TIMEOUT_MS=5000
