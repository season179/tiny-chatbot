# =============================================================================
# TINY CHATBOT SERVER - ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to .env and fill in your values
# Never commit your .env file to version control!
# =============================================================================

# -----------------------------------------------------------------------------
# Server Configuration
# -----------------------------------------------------------------------------

# Environment mode: development, production, or test
NODE_ENV=development

# Port number for the server to listen on (1-65535)
PORT=4000

# Host address to bind the server to
# Use 0.0.0.0 to listen on all network interfaces
# Use 127.0.0.1 or localhost for local-only access
HOST=0.0.0.0

# -----------------------------------------------------------------------------
# CORS Configuration
# -----------------------------------------------------------------------------

# Allowed origins for CORS requests
# Use '*' to allow all origins (not recommended for production)
# For production, set to your specific domain: https://yourdomain.com
CORS_ORIGIN=*

# Enable credentials (cookies, authorization headers) in CORS requests
# Set to 'true' or 'false'
CORS_CREDENTIALS=false

# -----------------------------------------------------------------------------
# Logging Configuration
# -----------------------------------------------------------------------------

# Log level: fatal, error, warn, info, debug, trace
LOG_LEVEL=info

# -----------------------------------------------------------------------------
# OpenAI Configuration
# -----------------------------------------------------------------------------

# REQUIRED: Your OpenAI API key (get one from https://platform.openai.com/api-keys)
OPENAI_API_KEY=sk-your-api-key-here

# Model to use for chat responses
# Recommended: gpt-5 for best tool calling support
OPENAI_MODEL=gpt-5

# Optional: Maximum number of tokens to generate in the response
# OPENAI_MAX_OUTPUT_TOKENS=4096

# -----------------------------------------------------------------------------
# Agentic Behavior Configuration
# -----------------------------------------------------------------------------

# Maximum number of tool execution rounds before stopping (1-100)
# Prevents infinite loops when the AI makes repeated tool calls
# Higher values allow more autonomous multi-step actions
# Recommended: 10 for development, 5 for production
MAX_TOOL_ROUNDS=10

# -----------------------------------------------------------------------------
# Database Configuration
# -----------------------------------------------------------------------------

# Path to SQLite database file
# Use ':memory:' for in-memory database (data will not persist)
# Production: Use absolute path like /var/lib/tiny-chatbot/sessions.db
DATABASE_PATH=./data/sessions.db

# -----------------------------------------------------------------------------
# Shell Tool Sandbox Configuration
# -----------------------------------------------------------------------------

# Enable shell tool execution (true/false)
# When enabled, the AI can use shell commands to inspect files
# SECURITY: Only enable if you understand the security implications
SHELL_SANDBOX_ENABLED=false

# Comma-separated allowlist of shell commands the AI can invoke
# Available: cat, ls, grep, rg, head, tail, pwd, echo, wc, which
# Recommended for production: cat,ls,rg
SHELL_SANDBOX_ALLOWED_COMMANDS=cat,ls,rg,head,tail

# Root directory the shell tools are allowed to access
# All file operations are restricted to this directory and its subdirectories
# REQUIRED: Must be an absolute path
# Example: /Users/yourname/project/proprietary-documents
# Get current directory: run `pwd` in your terminal
SHELL_SANDBOX_WORKING_DIR=/absolute/path/to/sandbox

# Maximum size in bytes for captured command output (prevents memory exhaustion)
# Default: 16384 (16KB)
# Production: Consider lowering to 8192 (8KB)
SHELL_SANDBOX_MAX_OUTPUT_BYTES=16384

# Maximum execution time in milliseconds for shell commands (prevents hung processes)
# Default: 5000 (5 seconds)
# Production: Consider lowering to 3000 (3 seconds)
SHELL_SANDBOX_TIMEOUT_MS=5000

# =============================================================================
# SECURITY CHECKLIST FOR PRODUCTION
# =============================================================================
# [ ] Set CORS_ORIGIN to your specific domain (not *)
# [ ] Set CORS_CREDENTIALS=true if using authentication
# [ ] Rotate OPENAI_API_KEY regularly
# [ ] Use restrictive SHELL_SANDBOX_ALLOWED_COMMANDS (e.g., cat,ls,rg only)
# [ ] Set SHELL_SANDBOX_WORKING_DIR to a dedicated sandbox directory
# [ ] Lower MAX_TOOL_ROUNDS to prevent resource exhaustion (e.g., 5)
# [ ] Use LOG_LEVEL=info or LOG_LEVEL=warn in production
# [ ] Set NODE_ENV=production
# [ ] Ensure DATABASE_PATH directory has proper permissions
# [ ] Never commit your .env file to version control
# =============================================================================

# =============================================================================
# TROUBLESHOOTING
# =============================================================================
# "OPENAI_API_KEY is required" → Check your .env file exists and has the key
# "Tool execution is not enabled" → Set SHELL_SANDBOX_ENABLED=true and restart
# Shell commands timing out → Increase SHELL_SANDBOX_TIMEOUT_MS
# Database errors → Ensure DATABASE_PATH directory exists with write permissions
# =============================================================================
